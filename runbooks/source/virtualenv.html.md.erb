---
title: Virtual environment copy for template deploy updates
weight: 650
last_reviewed_on: 2020-05-05
review_in: 3 months
---

# Virtual environment copy for template deploy updates
A copy of a working python virtualenv has been placed here [PaulFabricVirtualEnv](https://drive.google.com/open?id=1Zgl2CyUGsjMCLhZE2pbVjYxQ2PGnwMDE) 

Should you need to carry out fabric commands etc to update/deploy the remaining template-deploy repos and you do not have a virtualenv already set up then carry out the following:

####Set up your Virtualenv:

* locate where your virtualenvs are being installed by creating one and then locating the directory 

```
mkvirtualenv boris
````

```
sudo find / -name boris
````

* Just to verify that it has been created

```
workon boris
````

```
pip list
````

It will probably only return a couple of things like :

`pip (6.0.6)` 

`setuptools (11.0)`

* exit the virtualenv by

```
deactivate boris
````

* Download the file/folder [PaulFabricVirtualEnv](https://drive.google.com/open?id=1Zgl2CyUGsjMCLhZE2pbVjYxQ2PGnwMDE) from google drive 'MoJ Cloud Platforms'

* Unzip/open and rename the unzipped file to the same as your virtualenv created above (boris)

* Copy/overwrite the directory you located earlier (boris)

* Activate your virtualenv and verify that new env uploaded

```
workon boris
````

```
pip list
````

You should now see a list similar to:

`Package         Version`

`--------------- ---------`

`asn1crypto      0.24.0`

`awscli          1.15.77`

`bcrypt          3.1.4`

`bootstrap-cfn   1.5.4`

`bootstrap-salt  2.0.1`

`boto            2.49.0`

`boto3           1.7.76`

`botocore        1.10.76`

`certifi         2018.8.13`

`cffi            1.11.5`

`cfn-flip        1.0.3`

`chardet         3.0.4`

`click           6.7`

`colorama        0.3.9`

`cryptography    2.3`

`datadiff        2.0.0`

`Deprecated      1.2.3`

`dnspython       1.15.0`

`docutils        0.14`

`enum34          1.1.6`

`Fabric          1.14.0`

`futures         3.2.0`

`gnupg           2.3.1`

`idna            2.7`

`ipaddress       1.0.22`

`jmespath        0.9.3`

`ndg-httpsclient 0.5.1`

`netaddr         0.7.19`

`nose            1.3.7`

`paramiko        2.4.1`

`parse           1.8.4`

`pip             18.0`

`psutil          5.4.6`

`pyasn1          0.4.4`

`pycparser       2.18`

`pycrypto        2.6.1`

`pygit2          0.27.2`

`PyGithub        1.43.2`

`PyJWT           1.6.4`

`PyNaCl          1.2.1`

`pyOpenSSL       18.0.0`

`python-dateutil 2.7.3`

`python-slugify  1.2.5`

`PyYAML          3.13`

`requests        2.19.1`

`rsa             3.4.2`

`s3transfer      0.1.13`

`salt-shaker     1.0.4`

`setuptools      40.0.0`

`six             1.11.0`

`testfixtures    6.2.0`

`troposphere     2.3.1`

`Unidecode       1.0.22`

`urllib3         1.23`

`wrapt           1.10.11`

#### Example Fabric commands that can be used now:

* ssh keys update (used in conjunction with an vendor_upload or update - commands below)

```
fab application:cla-backend aws:moj-cla-dev environment:training config:./cloudformation/template.yaml passwords:./cloudformation/secrets.yaml    -i ../config/default.pem salt.ssh_keys -u username
```

* vendor_upload

```
fab application:cla-backend aws:moj-cla-dev environment:training config:./cloudformation/template.yaml passwords:./cloudformation/secrets.yaml    -i ../config/default.pem vendor_upload -u username
```

* update

```
fab application:cla-backend aws:moj-cla-dev environment:training config:./cloudformation/template.yaml passwords:./cloudformation/secrets.yaml    -i ../config/default.pem update  -u username
```

* deploy

```
fab application:cla-backend aws:moj-cla-dev environment:training config:./cloudformation/template.yaml passwords:./cloudformation/secrets.yaml    -i ../config/default.pem deploy:cla_backend,feature-LGA-1055-knowledgebase-categories.latest -u username
```

* list of available fabric commands

```
fab -l
```
