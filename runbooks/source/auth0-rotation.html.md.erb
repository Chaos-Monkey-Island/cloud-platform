---
title: Credentials rotation for auth0 apps
weight: 68
last_reviewed_on: 2020-06-25
review_in: 3 months
---

# Credentials rotation for auth0 apps

Cloud-Platform team uses auth0 with almost every component which requires authentication (clusters, Prometheus, Kibana, Grafana, etc). Credentials rotation within our live clusters requires to follow different steps and because of that users are not able to use the cluster until they re-authenticate (generate new kubeconfig file)

## Preparation

- Ensure users are aware of the change. It is important to point out that **they will have to reauthenticate against the cluster after the change** (following [user guide](https://user-guide.cloud-platform.service.justice.gov.uk/documentation/getting-started/kubectl-config.html#authentication)).
- You must have all the tools and variables (such as Terraform, TF's auth0 provider, environment variables, kops, etc) ready to apply changes against our infrastructure repo.
- It will be handy to have auth0 mangement console already openned in a browser tab, so you can verify and monitor the changes.

## 1) Taint resources (terraform)

The first step is to recreate auth0 app. We will have to taint the auth0 resource, so it gets recreated with new credentials:

```
$ terraform workspace select live-1
$ terraform taint module.auth0.auth0_client.components
```

Ensure with `terraform plan` that auth0 resource is going to be recreated. It will also recreate kops template file, which we are going to need in the next step. If you are happy with the changes apply them:

```
$ terraform apply
```

## 2) Rolling update of cluster (kops)

From the previous step a new [cloud-platform-infrastructure/kops/live-1.yaml](https://github.com/ministryofjustice/cloud-platform-infrastructure/blob/master/kops/live-1.yaml) file should have been generated. To apply this file we [already have a runbook](https://runbooks.cloud-platform.service.justice.gov.uk/running-kops-update-rollingupdate.html#updating-the-remote-kops-state), follow it step by step.

**NOTE**: As you will see, the change will require a rolling restart

## 3) Apply changes within components (terraform)

Execute `terraform plan` to ensure changes match resources below, if they do, apply them:

```
$ terraform apply -target=module.prometheus.kubernetes_secret.grafana_secret -target=module.prometheus.helm_release.prometheus_proxy -target=module.prometheus.helm_release.alertmanager_proxy  -target=helm_release.kuberos
```

Unfortunately, grafana pod will not pick up the secret change, so it needs to be recyled (just delete it and it will automatically get redeployed):

```
$ kubectl -n monitoring delete pod $GrafanaPodName
```

## 4) Update environment repo

We already have a [ticket](https://github.com/ministryofjustice/cloud-platform/issues/2006) to get rid of this step. Meanwhile we get it done, we should update [`oidc-components-secret.yaml` file](https://github.com/ministryofjustice/cloud-platform-environments/blob/master/namespaces/live-1.cloud-platform.service.justice.gov.uk/monitoring/oidc-components-secret.yaml) with the new auth0 credentials.

This step requires a PR and someone available to approve it.

## 5) Verifiying changes

In order to verify that the changes were successfully applied, follow the checklist below (order doesn't matter):

- You can authenticate to the cluster (follow [user guide](https://user-guide.cloud-platform.service.justice.gov.uk/documentation/getting-started/kubectl-config.html#authentication)) 
- Ensure you can authenticate to Grafana
- Ensure you can authenticate to AlertManager
- Ensure you can authenticate to Kibana
- Ensure you can authenticate to Prometheus

If all of this works, jump to the last step which is update our pipelines.

## 6) Update pipelines

Our pipelines read auth0 credentials from a K8S secret inside the manager cluster. This secret is updated through concourse's TF module variable called `tf_provider_auth0_client_secret` and `tf_provider_auth0_client_id` in [cloud-platform-infrastructure/blob/master/terraform/cloud-platform-eks/components/terraform.tfvars](https://github.com/ministryofjustice/cloud-platform-infrastructure/blob/master/terraform/cloud-platform-eks/components/terraform.tfvars)


